import fetch from "node-fetch";
import { logger } from "../logger";
import { ADVERT_LIST_QUERY } from "./queries";

const bodyString =
  '{"operationName":"AdvertList","variables":{"limit":15,"offset":15,"order":"TIMEORDER_DESC","locale":"CS","offerType":["PRONAJEM"],"estateType":["BYT"],"disposition":["DISP_3_KK","DISP_3_1"],"regionOsmIds":["R438171"],"location":"exact","currency":"CZK","construction":[]},"query":"query AdvertList($locale: Locale!, $estateType: [EstateType], $offerType: [OfferType], $disposition: [Disposition], $landType: [LandType], $region: ID, $regionOsmIds: [ID], $limit: Int = 15, $offset: Int = 0, $order: ResultOrder = TIMEORDER_DESC, $petFriendly: Boolean, $balconyFrom: Float, $balconyTo: Float, $loggiaFrom: Float, $loggiaTo: Float, $terraceFrom: Float, $terraceTo: Float, $cellarFrom: Float, $cellarTo: Float, $frontGardenFrom: Float, $frontGardenTo: Float, $parking: Boolean, $garage: Boolean, $lift: Boolean, $ownership: [Ownership], $condition: [Condition], $construction: [Construction], $equipped: [Equipped], $priceFrom: Int, $priceTo: Int, $surfaceFrom: Int, $surfaceTo: Int, $surfaceLandFrom: Int, $surfaceLandTo: Int, $advertId: [ID], $roommate: Boolean, $includeImports: Boolean, $boundaryPoints: [GPSPointInput], $discountedOnly: Boolean, $discountedOnlyByEstimate: Boolean, $barrierFree: Boolean, $polygonBuffer: Int, $availableFrom: DateTime, $importType: AdvertImportType, $currency: Currency, $searchPriceWithCharges: Boolean, $lowEnergy: Boolean) {\n  listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    limit: $limit\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    offset: $offset\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    frontGardenSurfaceFrom: $frontGardenFrom\n    frontGardenSurfaceTo: $frontGardenTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: $discountedOnly\n    discountedOnlyByEstimate: $discountedOnlyByEstimate\n    polygonBuffer: $polygonBuffer\n    barrierFree: $barrierFree\n    availableFrom: $availableFrom\n    importType: $importType\n    currency: $currency\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    list {\n      id\n      uri\n      estateType\n      offerType\n      disposition\n      landType\n      imageAltText(locale: $locale)\n      mainImage {\n        id\n        url(filter: RECORD_THUMB)\n        __typename\n      }\n      publicImages(limit: 3) {\n        id\n        size(filter: RECORD_MAIN) {\n          height\n          width\n          __typename\n        }\n        url(filter: RECORD_MAIN)\n        type\n        originalImage {\n          id\n          __typename\n        }\n        __typename\n      }\n      address(locale: $locale)\n      surface\n      surfaceLand\n      tags(locale: $locale)\n      price\n      charges\n      currency\n      petFriendly\n      reserved\n      highlighted\n      roommate\n      project {\n        id\n        __typename\n      }\n      gps {\n        lat\n        lng\n        __typename\n      }\n      mortgageData(locale: $locale) {\n        rateLow\n        rateHigh\n        loan\n        years\n        __typename\n      }\n      originalPrice\n      isDiscounted\n      nemoreport {\n        id\n        status\n        timeCreated\n        __typename\n      }\n      isNew\n      videos {\n        id\n        previewUrl\n        status\n        __typename\n      }\n      links {\n        id\n        url\n        type\n        status\n        __typename\n      }\n      type\n      dataJson\n      minRentDays\n      maxRentDays\n      __typename\n    }\n    totalCount\n    __typename\n  }\n  actionList: listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: true\n    limit: 3\n    availableFrom: $availableFrom\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    totalCount\n    __typename\n  }\n}"}';

const body = {
  operationName: "AdvertList",
  variables: {
    limit: 100,
    offset: 0,
    order: "TIMEORDER_DESC",
    locale: "CS",
    offerType: ["PRONAJEM"],
    estateType: ["BYT"],
    disposition: ["DISP_3_KK", "DISP_3_1"],
    regionOsmIds: ["R438171"],
    location: "exact",
    currency: "CZK",
    construction: [],
  },
  query:
    "query AdvertList($locale: Locale!, $estateType: [EstateType], $offerType: [OfferType], $disposition: [Disposition], $landType: [LandType], $region: ID, $regionOsmIds: [ID], $limit: Int = 15, $offset: Int = 0, $order: ResultOrder = TIMEORDER_DESC, $petFriendly: Boolean, $balconyFrom: Float, $balconyTo: Float, $loggiaFrom: Float, $loggiaTo: Float, $terraceFrom: Float, $terraceTo: Float, $cellarFrom: Float, $cellarTo: Float, $frontGardenFrom: Float, $frontGardenTo: Float, $parking: Boolean, $garage: Boolean, $lift: Boolean, $ownership: [Ownership], $condition: [Condition], $construction: [Construction], $equipped: [Equipped], $priceFrom: Int, $priceTo: Int, $surfaceFrom: Int, $surfaceTo: Int, $surfaceLandFrom: Int, $surfaceLandTo: Int, $advertId: [ID], $roommate: Boolean, $includeImports: Boolean, $boundaryPoints: [GPSPointInput], $discountedOnly: Boolean, $discountedOnlyByEstimate: Boolean, $barrierFree: Boolean, $polygonBuffer: Int, $availableFrom: DateTime, $importType: AdvertImportType, $currency: Currency, $searchPriceWithCharges: Boolean, $lowEnergy: Boolean) {\n  listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    limit: $limit\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    offset: $offset\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    frontGardenSurfaceFrom: $frontGardenFrom\n    frontGardenSurfaceTo: $frontGardenTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: $discountedOnly\n    discountedOnlyByEstimate: $discountedOnlyByEstimate\n    polygonBuffer: $polygonBuffer\n    barrierFree: $barrierFree\n    availableFrom: $availableFrom\n    importType: $importType\n    currency: $currency\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    list {\n      id\n      uri\n      estateType\n      offerType\n      disposition\n      landType\n      imageAltText(locale: $locale)\n      mainImage {\n        id\n        url(filter: RECORD_THUMB)\n        __typename\n      }\n      publicImages(limit: 3) {\n        id\n        size(filter: RECORD_MAIN) {\n          height\n          width\n          __typename\n        }\n        url(filter: RECORD_MAIN)\n        type\n        originalImage {\n          id\n          __typename\n        }\n        __typename\n      }\n      address(locale: $locale)\n      surface\n      surfaceLand\n      tags(locale: $locale)\n      price\n      charges\n      currency\n      petFriendly\n      reserved\n      highlighted\n      roommate\n      project {\n        id\n        __typename\n      }\n      gps {\n        lat\n        lng\n        __typename\n      }\n      mortgageData(locale: $locale) {\n        rateLow\n        rateHigh\n        loan\n        years\n        __typename\n      }\n      originalPrice\n      isDiscounted\n      nemoreport {\n        id\n        status\n        timeCreated\n        __typename\n      }\n      isNew\n      videos {\n        id\n        previewUrl\n        status\n        __typename\n      }\n      links {\n        id\n        url\n        type\n        status\n        __typename\n      }\n      type\n      dataJson\n      minRentDays\n      maxRentDays\n      __typename\n    }\n    totalCount\n    __typename\n  }\n  actionList: listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: true\n    limit: 3\n    availableFrom: $availableFrom\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    totalCount\n    __typename\n  }\n}",
};

const BEZREALITKY_VARIABLES = {
  limit: 15,
  offset: 15,
  order: "TIMEORDER_DESC",
  locale: "CS",
  offerType: ["PRONAJEM"],
  estateType: ["BYT"],
  disposition: ["DISP_3_KK", "DISP_3_1"],
  regionOsmIds: ["R438171"],
  location: "exact",
  currency: "CZK",
  construction: [],
} as const;

const query =
  "query AdvertList($locale: Locale!, $estateType: [EstateType], $offerType: [OfferType], $disposition: [Disposition], $landType: [LandType], $region: ID, $regionOsmIds: [ID], $limit: Int = 15, $offset: Int = 0, $order: ResultOrder = TIMEORDER_DESC, $petFriendly: Boolean, $balconyFrom: Float, $balconyTo: Float, $loggiaFrom: Float, $loggiaTo: Float, $terraceFrom: Float, $terraceTo: Float, $cellarFrom: Float, $cellarTo: Float, $frontGardenFrom: Float, $frontGardenTo: Float, $parking: Boolean, $garage: Boolean, $lift: Boolean, $ownership: [Ownership], $condition: [Condition], $construction: [Construction], $equipped: [Equipped], $priceFrom: Int, $priceTo: Int, $surfaceFrom: Int, $surfaceTo: Int, $surfaceLandFrom: Int, $surfaceLandTo: Int, $advertId: [ID], $roommate: Boolean, $includeImports: Boolean, $boundaryPoints: [GPSPointInput], $discountedOnly: Boolean, $discountedOnlyByEstimate: Boolean, $barrierFree: Boolean, $polygonBuffer: Int, $availableFrom: DateTime, $importType: AdvertImportType, $currency: Currency, $searchPriceWithCharges: Boolean, $lowEnergy: Boolean) {\n  listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    limit: $limit\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    offset: $offset\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    frontGardenSurfaceFrom: $frontGardenFrom\n    frontGardenSurfaceTo: $frontGardenTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: $discountedOnly\n    discountedOnlyByEstimate: $discountedOnlyByEstimate\n    polygonBuffer: $polygonBuffer\n    barrierFree: $barrierFree\n    availableFrom: $availableFrom\n    importType: $importType\n    currency: $currency\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    list {\n      id\n      uri\n      estateType\n      offerType\n      disposition\n      landType\n      imageAltText(locale: $locale)\n      mainImage {\n        id\n        url(filter: RECORD_THUMB)\n        __typename\n      }\n      publicImages(limit: 3) {\n        id\n        size(filter: RECORD_MAIN) {\n          height\n          width\n          __typename\n        }\n        url(filter: RECORD_MAIN)\n        type\n        originalImage {\n          id\n          __typename\n        }\n        __typename\n      }\n      address(locale: $locale)\n      surface\n      surfaceLand\n      tags(locale: $locale)\n      price\n      charges\n      currency\n      petFriendly\n      reserved\n      highlighted\n      roommate\n      project {\n        id\n        __typename\n      }\n      gps {\n        lat\n        lng\n        __typename\n      }\n      mortgageData(locale: $locale) {\n        rateLow\n        rateHigh\n        loan\n        years\n        __typename\n      }\n      originalPrice\n      isDiscounted\n      nemoreport {\n        id\n        status\n        timeCreated\n        __typename\n      }\n      isNew\n      videos {\n        id\n        previewUrl\n        status\n        __typename\n      }\n      links {\n        id\n        url\n        type\n        status\n        __typename\n      }\n      type\n      dataJson\n      minRentDays\n      maxRentDays\n      __typename\n    }\n    totalCount\n    __typename\n  }\n  actionList: listAdverts(\n    offerType: $offerType\n    estateType: $estateType\n    disposition: $disposition\n    landType: $landType\n    regionId: $region\n    regionOsmIds: $regionOsmIds\n    order: $order\n    petFriendly: $petFriendly\n    balconySurfaceFrom: $balconyFrom\n    balconySurfaceTo: $balconyTo\n    loggiaSurfaceFrom: $loggiaFrom\n    loggiaSurfaceTo: $loggiaTo\n    terraceSurfaceFrom: $terraceFrom\n    terraceSurfaceTo: $terraceTo\n    cellarSurfaceFrom: $cellarFrom\n    cellarSurfaceTo: $cellarTo\n    parking: $parking\n    garage: $garage\n    lift: $lift\n    ownership: $ownership\n    condition: $condition\n    construction: $construction\n    equipped: $equipped\n    priceFrom: $priceFrom\n    priceTo: $priceTo\n    surfaceFrom: $surfaceFrom\n    surfaceTo: $surfaceTo\n    surfaceLandFrom: $surfaceLandFrom\n    surfaceLandTo: $surfaceLandTo\n    ids: $advertId\n    roommate: $roommate\n    includeImports: $includeImports\n    boundaryPoints: $boundaryPoints\n    discountedOnly: true\n    limit: 3\n    availableFrom: $availableFrom\n    searchPriceWithCharges: $searchPriceWithCharges\n    lowEnergy: $lowEnergy\n  ) {\n    totalCount\n    __typename\n  }\n}";

export class BezrealityClient {
  private static readonly _endpoint = "https://api.bezrealitky.cz/graphql";
  private static readonly _body = JSON.stringify({
    operationName: "AdvertList",
    variables: BEZREALITKY_VARIABLES,
    query: query,
  });

  static async getPostings(): Promise<any | undefined> {
    try {
      logger.info("Starting fetch for bezrealitky");

      const response = await fetch(this._endpoint, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: bodyString,
      });

      if (!response.ok) {
        logger.error({
          message: `HTTP error! status: ${response.status} ${response.statusText}`,
        });
        process.exit(1);
      }

      const data = await response.json();

      logger.info({
        message: "Fetch to bezrealitky successful",
      });

      return data;
    } catch (error) {
      logger.error({
        message: "Error fetching from bezrealitky",
        error: error instanceof Error ? error.message : "Unknown error",
      });
    }
  }
}
